"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any
from fastmcp.server.server import FastMCP

"""Utilities for inspecting FastMCP instances."""
@dataclass
class ToolInfo:
    """Information about a tool."""
    key: str
    name: str
    description: str | None
    input_schema: dict[str, Any]
    annotations: dict[str, Any] | None = ...
    tags: list[str] | None = ...
    enabled: bool | None = ...


@dataclass
class PromptInfo:
    """Information about a prompt."""
    key: str
    name: str
    description: str | None
    arguments: list[dict[str, Any]] | None = ...
    tags: list[str] | None = ...
    enabled: bool | None = ...


@dataclass
class ResourceInfo:
    """Information about a resource."""
    key: str
    uri: str
    name: str | None
    description: str | None
    mime_type: str | None = ...
    tags: list[str] | None = ...
    enabled: bool | None = ...


@dataclass
class TemplateInfo:
    """Information about a resource template."""
    key: str
    uri_template: str
    name: str | None
    description: str | None
    mime_type: str | None = ...
    tags: list[str] | None = ...
    enabled: bool | None = ...


@dataclass
class FastMCPInfo:
    """Information extracted from a FastMCP instance."""
    name: str
    instructions: str | None
    fastmcp_version: str
    mcp_version: str
    server_version: str
    tools: list[ToolInfo]
    prompts: list[PromptInfo]
    resources: list[ResourceInfo]
    templates: list[TemplateInfo]
    capabilities: dict[str, Any]
    ...


async def inspect_fastmcp_v2(mcp: FastMCP[Any]) -> FastMCPInfo:
    """Extract information from a FastMCP v2.x instance.

    Args:
        mcp: The FastMCP v2.x instance to inspect

    Returns:
        FastMCPInfo dataclass containing the extracted information
    """
    ...

async def inspect_fastmcp_v1(mcp: Any) -> FastMCPInfo:
    """Extract information from a FastMCP v1.x instance using a Client.

    Args:
        mcp: The FastMCP v1.x instance to inspect

    Returns:
        FastMCPInfo dataclass containing the extracted information
    """
    ...

async def inspect_fastmcp(mcp: FastMCP[Any] | Any) -> FastMCPInfo:
    """Extract information from a FastMCP instance into a dataclass.

    This function automatically detects whether the instance is FastMCP v1.x or v2.x
    and uses the appropriate extraction method.

    Args:
        mcp: The FastMCP instance to inspect (v1.x or v2.x)

    Returns:
        FastMCPInfo dataclass containing the extracted information
    """
    ...

