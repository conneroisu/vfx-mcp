"""
This type stub file was generated by pyright.
"""

from typing import Annotated, Any, TypeVar
from pydantic import BeforeValidator
from typing_extensions import Self
from fastmcp.utilities.types import FastMCPBaseModel

T = TypeVar("T")
class FastMCPComponent(FastMCPBaseModel):
    """Base class for FastMCP tools, prompts, resources, and resource templates."""
    name: str = ...
    description: str | None = ...
    tags: Annotated[set[str], BeforeValidator(_convert_set_default_none)] = ...
    enabled: bool = ...
    _key: str | None = ...
    def __init__(self, *, key: str | None = ..., **kwargs: Any) -> None:
        ...
    
    @property
    def key(self) -> str:
        """
        The key of the component. This is used for internal bookkeeping
        and may reflect e.g. prefixes or other identifiers. You should not depend on
        keys having a certain value, as the same tool loaded from different
        hierarchies of servers may have different keys.
        """
        ...
    
    def with_key(self, key: str) -> Self:
        ...
    
    def __eq__(self, other: object) -> bool:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def enable(self) -> None:
        """Enable the component."""
        ...
    
    def disable(self) -> None:
        """Disable the component."""
        ...
    


